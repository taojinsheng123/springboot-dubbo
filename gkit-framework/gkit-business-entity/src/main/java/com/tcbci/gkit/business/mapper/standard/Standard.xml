<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tcbci.gkit.business.entity.standard.StandardMapper">
  <resultMap id="BaseResultMap" type="com.tcbci.gkit.business.domain.standard.Standard">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="standardID" />
    <result column="title" jdbcType="NVARCHAR" property="standardTitle" />
    <result column="title_spell" jdbcType="NVARCHAR" property="standardTitleSpell" />
    <result column="no" jdbcType="NVARCHAR" property="numId" />
    <result column="promulgate_organ" jdbcType="NVARCHAR" property="promulgate_Organ" />
    <result column="confirm_organ" jdbcType="NVARCHAR" property="confirm_Organ" />
    <result column="promulgate_size" jdbcType="NVARCHAR" property="promulgate_Size" />
    <result column="promulgate_date" jdbcType="TIMESTAMP" property="promulgate_Date" />
    <result column="executive_date" jdbcType="TIMESTAMP" property="executive_Date" />
    <result column="promulgate_organ_attribute" jdbcType="INTEGER" property="promulgate_OrganAttribute_Id" />
    <result column="invalidation" jdbcType="VARCHAR" property="invalidation" />
    <result column="level" jdbcType="INTEGER" property="standardLevel_ID" />
    <result column="category" jdbcType="VARCHAR" property="standardSort_ID" />
    <result column="memo" jdbcType="NVARCHAR" property="memo" />
    <result column="province_code" jdbcType="INTEGER" property="standardProvince_Id" />
    <result column="order_units" jdbcType="NVARCHAR" property="order_Units" />
    <result column="is_delete" jdbcType="TINYINT" property="isDel" />
    <result column="create_user" jdbcType="INTEGER" property="createrID" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createTime" />
    <result column="edit_user" jdbcType="INTEGER" property="modifierID" />
    <result column="edit_date" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="click_count" jdbcType="INTEGER" property="clickCount" />
    <result column="status" jdbcType="INTEGER" property="isCheck" />
    <result column="audit_user" jdbcType="INTEGER" property="auditorID" />
    <result column="audit_date" jdbcType="TIMESTAMP" property="auditeTime" />
    <result column="StandardLevelName" jdbcType="VARCHAR" property="standardLevelName" />
    <result column="InvalidationName" jdbcType="VARCHAR" property="invalidationName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.tcbci.gkit.business.domain.standard.Standard">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="content" jdbcType="LONGNVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id,title,title_spell,no,promulgate_organ,confirm_organ,promulgate_size,promulgate_date,
    executive_date,promulgate_organ_attribute,invalidation,level,category,memo,province_code,
    order_units,is_delete,status,click_count,create_user,create_date,edit_user,edit_date,
    audit_user,audit_date
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    content
  </sql>
  
  <sql id="Table_Name">
  	t_gb_standard
  </sql>
  
  <select id="get" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
	    a.*,
		b.name StandardLevelName,
		c.name  InvalidationName
    from <include refid="Table_Name"></include> as a
    left join t_gb_system_args as b ON b.value = a.level AND b.arg_key LIKE 'standard.level%'
	left join t_gb_system_args as c ON c.value = a.invalidation AND c.arg_key LIKE 'standard.invalidation%'
    where a.id = #{standardID,jdbcType=INTEGER}
  </select>
  
  
  
  
  
  <select id="listByPage" resultMap="ResultMapWithBLOBs">
  	select 
	    a.*,
		b.name StandardLevelName,
		c.name  InvalidationName
    from <include refid="Table_Name"></include> as a
    left join t_gb_system_args as b ON b.value = a.level AND b.arg_key LIKE 'standard.level%'
	left join t_gb_system_args as c ON c.value = a.invalidation AND c.arg_key LIKE 'standard.invalidation%'
    <where>
    	IFNULL(a.is_delete,0)=0 
    	AND IFNULL(a.status,0)=1
    	AND IFNULL(a.content,'')!=''
    	<if test="c.keywords !=null ">
    		<foreach item="item" open=" AND (" close=")" index="index" collection="c.keywords" separator=" AND " >
			        (
			        	a.title LIKE CONCAT('%',#{c.keywords[${index}]},'%') 
			        	OR a.no LIKE  CONCAT('%',#{c.keywords[${index}]},'%')
			        )
			</foreach> 
    	</if>
    	<if test="c.levelIds != null">
    		<foreach item="item" index="index" collection="c.levelIds" separator="," 
    			open=" AND a.level IN (" close=")">
			        #{c.levelIds[${index}]}
			</foreach>
    	</if>
    	<if test="c.categoryIds !=null ">
    		<foreach item="item" index="index" collection="c.categoryIds" separator=" AND " open=" AND ">
			       (','+IFNULL(a.category,'')+',') LIKE CONCAT('%',#{c.categoryIds[${index}]},'%')
			</foreach> 
    	</if>
    	<if test="c.validations != null">
    		<foreach item="item" index="index" collection="c.validations" separator="," 
    			open=" AND a.invalidation IN (" close=")">
			        #{c.validations[${index}]}
			</foreach>
    	</if>
    </where>
   	ORDER BY a.executive_date desc
   	LIMIT #{p.limitStartRow},#{p.pageSize}
  </select>
  <select id="listByPageCount" resultType="INT">
  	select 
	    COUNT(a.id)
    from <include refid="Table_Name"></include> as a
    left join t_gb_system_args as b ON b.value = a.level AND b.arg_key LIKE 'standard.level%'
	left join t_gb_system_args as c ON c.value = a.invalidation AND c.arg_key LIKE 'standard.invalidation%'
    <where>
    	IFNULL(a.is_delete,0)=0 
    	AND IFNULL(a.status,0)=1
    	AND IFNULL(a.content,'')!=''
    	<if test="c.keywords !=null ">
    		<foreach item="item" open=" AND (" close=")" index="index" collection="c.keywords" separator=" AND " >
			        (
			        	a.title LIKE CONCAT('%',#{c.keywords[${index}]},'%') 
			        	OR a.no LIKE  CONCAT('%',#{c.keywords[${index}]},'%')
			        )
			</foreach> 
    	</if>
    	<if test="c.levelIds != null">
    		<foreach item="item" index="index" collection="c.levelIds" separator="," 
    			open=" AND a.level IN (" close=")">
			        #{c.levelIds[${index}]}
			</foreach>
    	</if>
    	<if test="c.categoryIds !=null ">
    		<foreach item="item" index="index" collection="c.categoryIds" separator=" AND " open=" AND ">
			       CONCAT(',',IFNULL(a.category,''),',') LIKE CONCAT('%,',#{c.categoryIds[${index}]},',%')
			</foreach> 
    	</if>
    	<if test="c.validations != null">
    		<foreach item="item" index="index" collection="c.validations" separator="," 
    			open=" AND a.invalidation IN (" close=")">
			        #{c.validations[${index}]}
			</foreach>
    	</if>
    </where>
  </select>
</mapper>